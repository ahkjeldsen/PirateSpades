// <copyright file="PirateScannerTest.IsValidIp01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Net;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace PirateSpades.Network
{
    public partial class PirateScannerTest {
[TestMethod]
[PexGeneratedBy(typeof(PirateScannerTest))]
public void IsValidIp0124()
{
    IPAddress iPAddress;
    bool b;
    byte[] bs = new byte[16];
    iPAddress = new IPAddress(bs);
    iPAddress.ScopeId = 0L;
    b = this.IsValidIp01(iPAddress);
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateScannerTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void IsValidIp01ThrowsContractException563()
{
    try
    {
      bool b;
      b = this.IsValidIp01((IPAddress)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateScannerTest))]
public void IsValidIp609()
{
    bool b;
    b = this.IsValidIp("");
    Assert.AreEqual<bool>(false, b);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateScannerTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void IsValidIpThrowsContractException634()
{
    try
    {
      bool b;
      b = this.IsValidIp((string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
