// <copyright file="PirateMessageTest.GetPlayerNames.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace PirateSpades.Network
{
    public partial class PirateMessageTest {
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames644()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: AaAA\0");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(0, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames108()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: AaAZ");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(1, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames738()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: AaA\0");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(0, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames282()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: AaJ");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(1, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames269()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: \0\0\0");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(0, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames799()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: ");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(0, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames75()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, new string('\0', 13));
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(0, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerNames138()
{
    PirateMessage pirateMessage;
    HashSet<string> hashSet;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "");
    hashSet = this.GetPlayerNames(pirateMessage);
    Assert.IsNotNull((object)hashSet);
    Assert.AreEqual<int>(0, hashSet.Count);
    Assert.IsNotNull(hashSet.Comparer);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void GetPlayerNamesThrowsContractException810()
{
    try
    {
      HashSet<string> hashSet;
      hashSet = this.GetPlayerNames((PirateMessage)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerName430()
{
    PirateMessage pirateMessage;
    string s;
    pirateMessage =
      new PirateMessage(PirateMessageHead.Fail, "player_name: AA00000000");
    s = this.GetPlayerName(pirateMessage);
    Assert.AreEqual<string>("AA00000000", s);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerName363()
{
    PirateMessage pirateMessage;
    string s;
    pirateMessage =
      new PirateMessage(PirateMessageHead.Fail, "player_name: 000000000000");
    s = this.GetPlayerName(pirateMessage);
    Assert.AreEqual<string>(new string('0', 12), s);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerName816()
{
    PirateMessage pirateMessage;
    string s;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_name: 000");
    s = this.GetPlayerName(pirateMessage);
    Assert.AreEqual<string>("000", s);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void GetPlayerNameThrowsContractException671()
{
    try
    {
      PirateMessage pirateMessage;
      string s;
      pirateMessage = new PirateMessage(PirateMessageHead.Fail, "");
      s = this.GetPlayerName(pirateMessage);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void GetPlayerNameThrowsContractException485()
{
    try
    {
      string s;
      s = this.GetPlayerName((PirateMessage)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
