// <copyright file="GameTest.Contains01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace PirateSpades.GameLogicV2
{
    using PirateSpades.GameLogic;

    public partial class GameTest {
[TestMethod]
[PexGeneratedBy(typeof(GameTest))]
public void Contains01591()
{
    Game game;
    bool b;
    game = new Game();
    b = this.Contains01(game, "");
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)game);
    Assert.IsNotNull(game.Players);
    Assert.AreEqual<int>(-1, game.CurrentDealer);
    Assert.AreEqual<int>(0, game.CurrentRound);
    Assert.AreEqual<bool>(false, game.Started);
}
[TestMethod]
[PexGeneratedBy(typeof(GameTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Contains01ThrowsContractException147()
{
    try
    {
      Game game;
      bool b;
      game = new Game();
      b = this.Contains01(game, (string)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(GameTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ContainsThrowsContractException720()
{
    try
    {
      Game game;
      bool b;
      game = new Game();
      b = this.Contains(game, (Player)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
