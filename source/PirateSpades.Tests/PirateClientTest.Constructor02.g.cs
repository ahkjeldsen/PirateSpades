// <copyright file="PirateClientTest.Constructor02.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System.Net.Sockets;
using Microsoft.Pex.Engine.Exceptions;

namespace PirateSpades.Network
{
    public partial class PirateClientTest {
[TestMethod]
[PexGeneratedBy(typeof(PirateClientTest))]
[PexRaisedException(typeof(SocketException))]
public void Constructor02ThrowsSocketException649()
{
    PirateClient pirateClient;
    pirateClient = this.Constructor02("4.2.2.0", "4.2.2.0", 1);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateClientTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor02ThrowsContractException594()
{
    try
    {
      PirateClient pirateClient;
      pirateClient = this.Constructor02("", "", 16777217);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateClientTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor02ThrowsContractException583()
{
    try
    {
      PirateClient pirateClient;
      pirateClient = this.Constructor02("", "", 1);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateClientTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor02ThrowsContractException83()
{
    try
    {
      PirateClient pirateClient;
      pirateClient = this.Constructor02("", "", 0);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateClientTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor02ThrowsContractException89()
{
    try
    {
      PirateClient pirateClient;
      pirateClient = this.Constructor02("", (string)null, 0);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
[TestMethod]
[PexGeneratedBy(typeof(PirateClientTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void Constructor02ThrowsContractException723()
{
    try
    {
      PirateClient pirateClient;
      pirateClient = this.Constructor02((string)null, (string)null, 0);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
