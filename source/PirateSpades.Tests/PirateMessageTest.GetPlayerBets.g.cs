// <copyright file="PirateMessageTest.GetPlayerBets.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Engine.Exceptions;

namespace PirateSpades.Network
{
    public partial class PirateMessageTest {
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets654()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage =
      new PirateMessage(PirateMessageHead.Fail, "player_bet: \u0100;0\0");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets694()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage =
      new PirateMessage(PirateMessageHead.Fail, "player_bet: \u0100;0");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(1, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets102()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_bet: \u0100c");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets573()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_bet: b\0");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets967()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_bet: \u00f0");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets832()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_bet: \0");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets519()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "player_bet: ");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets865()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, new string('\0', 12));
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
public void GetPlayerBets828()
{
    PirateMessage pirateMessage;
    Dictionary<string, int> dictionary;
    pirateMessage = new PirateMessage(PirateMessageHead.Fail, "");
    dictionary = this.GetPlayerBets(pirateMessage);
    Assert.IsNotNull((object)dictionary);
    Assert.IsNotNull(dictionary.Comparer);
    Assert.AreEqual<int>(0, dictionary.Count);
}
[TestMethod]
[PexGeneratedBy(typeof(PirateMessageTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void GetPlayerBetsThrowsContractException779()
{
    try
    {
      Dictionary<string, int> dictionary;
      dictionary = this.GetPlayerBets((PirateMessage)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
    }
}
